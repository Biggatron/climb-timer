<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head'); %>
</head>
<body class="container">

<header>
  <%- include('../partials/header', {navItem: 'new-comp'}); %>
</header>

<main>
  <div class="jumbotron">
      <!-- Nafn á móti -->
      <h1><input class="form-input" type="text" id="compName" placeholder="Heiti móts..."></input></h1>
        <div class="form-group">
          <!-- Radio button fyrir tegund móts -->
            <label for="compType">Tegund móts</label>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="compType" id="radioBoulder" value="boulder" onChange="compTypeRadioChange()" checked>
                <label class="form-check-label" for="compType">
                    Grjótglíma
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="compType" id="radioLead" value="lead" onChange="compTypeRadioChange()">
                <label class="form-check-label" for="compType">
                    línuklifur
                </label>
            </div>
          <!-- Date picker fyrir dagsetningu móts-->
            <div class="col-lg-3 col-sm-6">
              <label for="compDate">Dagsetning móts</label>
              <input id="compDate" class="form-control" type="date"/>
            </div>
            <!-- Textarea fyrir nánari upplýsingar-->
            <div class="col-lg-6 col-sm-12">
              <label for="compDescription">Nánari upplýsingar</label>
              <textarea id="compDescription" class="form-control" type="text"></textarea>
            </div>  

            <!-- Drop down listi
            <label for="compType">Tegund móts</label>
            <select class="form-control" id="compType">
                <option>Grjótglíma</option>
                <option>Línuklifur</option>
            </select> -->
        </div>
        <div class="megatron" id="categories">
          <ul class="m-0 nav nav-fill nav-justified nav-tabs" id="categoryHeaderContatiner" role="tablist">

            <!-- <li class="nav-item"> 
              <button contentEditable="true" class="active nav-link" id="" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true"> <i class="fas fa-home"></i>Flokkur 1</button>
            </li> -->
            <li class="nav-item"> 
              <button id="category1" class="active nav-link" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true"><span contenteditable="true">Flokkur 1</span></button>
            </li>
            <li class="nav-item" id="newTab">
              <button type="button" class="nav-link" onclick="newCategory()">+</a>
            </li>

          </ul>
          <div id="categoryContentContatiner" class="border-grey bg-white p-3 tab-content">

              <div class="tab-pane active" id="category1" role="tabpanel" aria-labelledby="home-tab">
                <!-- Drop down listi með keppnisformi -->
                <div class="col-lg-2 col-sm-4">
                  <label for="problemType">Keppnisform</label>
                  <select class="form-control" id="problemTypeId1" onchange="getProblemType(this)">
                      <option value="timeLimit" selected>Tímamörk</option>
                      <option value="attemptLimit">Fjöldi tilrauna</option>
                  </select>
                </div>
                <div class="center-col-container col-lg-1 col-sm-2">
                  <label>Fjöldi leiða</label>
                  <input id="problemCountId1" type="number" name="problemCount" min="0" step="1" value="1">
                </div>
                <div id="maxTriesContainer1" hidden="true">
                  <label>Hámarks fjöldi tilrauna</label>
                  <div class="center-col-container col-lg-1 col-sm-2">
                    <input id="maxTriesId1" type="number" name="problemTries" min="0" step="1" value="5">
                  </div>
                </div>
                  <div id="timeLimitContainer1" class="center-col-container col-lg-1 col-sm-2">
                    <label>Tímamörk</label>
                    <input id="timeLimitId1" type="number" name="problemTimeLimit" min="0" step="1">
                  </div>
                <div id="problemContainer1" class="problemContainer">
                  <div class="problem">
                  </div>
                </div>
              </div>
          </div>
        </div>
        <button onclick="createCompetition()" type>Stofna mót</button>
  </div>
</main>

<footer>
  <%- include('../partials/footer'); %>
</footer>

</body>
</html>
<script>
  var categoryCounter = 1; // Used to get next category ID
  var comp = { }
  compTypeRadioChange(); // Initializes comp type

  // Get all existing categories
  var children = document.getElementById('myTab').children;

  // Get existing categories count to use later
  var childrenCount = children.length;

  function readCompDataFromDOM() {
    let compName = document.getElementById('compName').value;
    let compDate = document.getElementById('compDate').value;
    comp = {
      name: compName,
      date: compDate
    };
    return comp;
  }

  function getProblemType(selectObject) {
    let problemType = selectObject.value;
    var activeTab = document.getElementsByClassName("tab-pane active");
    var activeTabChildren = activeTab.home.children;
    console.log({activeTab})
    console.log({activeTabChildren})

  }

  function createCompetition() {

    let compData = readCompDataFromDOM();
    console.log({compData});
    postData('/comp/create', compData).then(returnData => {
      console.log({returnData});
      if (returnData) { // bakendi skilar compData með IDs ef insert var successfull
        window.location.href = '/comp/' + returnData.id;
      } else {
        alert('creation failed')
      }
      console.log(returnData); // JSON data parsed by `data.json()` call
    });
  }

  function addProblem(problem) { // type = Boulder or lead
    if (!problem) { problem = {} }; // Initialize problem if necessary

    // Set problem name if not set
    if (!problem.name) {
      var problemCount = document.getElementById('problemContainer').children.length;
      problem.name = `Leið ${problemCount}`
    }

    // Hide lead or boulder settings
    if (comp.type === 'BOULDER') {
      problem.leadHidden = true;
    } else {
      problem.boulderHidden = true;
    }

    // Initialize if empty
    problem.maxTries = problem.maxTries ?? '0';
    problem.timeLimit = problem.timeLimit ?? '0';
    problem.timeBuffer = problem.timeBuffer ?? '0';
    problem.holdCount = problem.holdCount ?? '0';
    problem.remark = problem.remark ?? '';
  


  }

  function compTypeRadioChange() {
    var rad = document.getElementById('radioBoulder');
    if (rad.checked) {
      comp.type = 'BOULDER';
    } else {
      comp.type = 'LEAD';
    }
    console.log(comp)
  }

  function newCategory() {
    categoryCounter++;

    var categoryHeaders = document.getElementById('categoryHeaderContainer').chilren;
    var categoryContents = document.getElementById('categoryContentContainer');

    // Get a reference to the new tab button to append new category before
    var newTabNode = document.getElementById('newTab');
    
    newTabNode.before('');

    // Get a reference to the categories container to append to
    var categories = document.getElementById('myTab');


    // Get a reference to the active category to copy
    var activeCategory = document.getElementsByClassName('tab-pane active');

    // Clone active category
    var newCategory = activeCategory[0].cloneNode(true);
 
    // Overwrite values from cloned tab
    newCategory.id = "cat" + ( childrenCount); 
    newCategory.className = "nav-link";

    // 
    var found = false;
    for (var i=1; i<=100; i++) {
      var newCategoryName = newCategory.innerText + "(" + i + ")";
      for (var j=0; j<children.length; j++) {
        if (children[0].innerText === newCategoryName) {
          found = true;
          break;
        }
      }
      if (!found) {
        newCategory.innerText = newCategoryName;
        break;
      }
    }


    // Create li element to wrap new cloned tab
    var newListItem = document.createElement('li');
    newListItem.className = "nav-item";
    newListItem.appendChild(newCategory);
    
    // Insert new category tab before new tab button
    categories.insertBefore(newListItem, newTabNode);
    
    ++childrenCount;

    // console.log(categories);
    // for (var i = 0; i < children.length; i++) {
      //   var currCategory = children[i];
      //   if ( currCategory.classList.contains('active')) {
      //     cu
      //     newCategory = currCategory.cloneNode(true);
      //     newCategory.id = "category" + ( children.length + 1 ); 
      //     console.log(newCategory.id);
      //     categories.appendChild(newCategory);
      //   }
      // }
  }
  function newCategory() {
    console.log('new cat');


  }
</script>