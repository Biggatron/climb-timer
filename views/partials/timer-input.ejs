<link rel="stylesheet" href="/css/timer.css" type="text/css">
<div class="timer-input-container">
    <div class="timer-input">
        <p class="center-self">Timer</p>
        <div class="timer-input-buttons-container">
            <button class="timer-input-button" onclick="increaseTimerMinutes()">+</button>
            <button class="timer-input-button" onclick="increaseTimerSeconds()">+</button>
        </div>
        <div class="timer-input-time-container">
            <div id="timerMin" class="timer-input-text">00</div>
            <div class="timer-input-text">:</div>
            <div id="timerSec" class="timer-input-text">00</div>
        </div>
        <div class="timer-input-buttons-container">
            <button class="timer-input-button" onclick="decreaseTimerMinutes()">-</button>
            <button class="timer-input-button" onclick="decreaseTimerSeconds()">-</button>
        </div>
    </div>
    <div class="timer-input">
        <p class="center-self">Buffer</p>
        <div class="timer-input-buttons-container">
            <button class="timer-input-button" onclick="increaseBufferMinutes()">+</button>
            <button class="timer-input-button" onclick="increaseBufferSeconds()">+</button>
        </div>
        <div class="timer-input-time-container">
            <div id="bufferMin" class="timer-input-text">00</div>
            <div class="timer-input-text">:</div>
            <div id="bufferSec" class="timer-input-text">00</div>
        </div>
        <div class="timer-input-buttons-container">
            <button class="timer-input-button" onclick="decreaseBufferMinutes()">-</button>
            <button class="timer-input-button" onclick="decreaseBufferSeconds()">-</button>
        </div>
    </div>
    
</div>

<script>
    var step = 15;

    var timer = {
        minutes: 0,
        seconds: 0
    }
    var buffer = {
        minutes: 0,
        seconds: 0
    }
    var timerString = {
        minutes: '00',
        seconds: '00'
    }
    var bufferString = {
        minutes: '00',
        seconds: '00'
    }

    var timerMinEl = document.getElementById('timerMin');
    var timerSecEl = document.getElementById('timerSec');
    var bufferMinEl = document.getElementById('bufferMin');
    var bufferSecEl = document.getElementById('bufferSec');

    // Timer events
    function increaseTimerMinutes() {
        increaseMinutes(timer, timerString, timerMinEl)
    }  
    function decreaseTimerMinutes() {
        decreaseMinutes(timer, timerString, timerMinEl)
    }  
    function increaseTimerSeconds() {
        increaseSeconds(timer, timerString, timerMinEl, timerSecEl)
    }  
    function decreaseTimerSeconds() {
        decreaseSeconds(timer, timerString, timerMinEl, timerSecEl)
    }  

    // Buffer events
    function increaseBufferMinutes() {
        increaseMinutes(buffer, bufferString, bufferMinEl)
    }  
    function decreaseBufferMinutes() {
        decreaseMinutes(buffer, bufferString, bufferMinEl)
    }  
    function increaseBufferSeconds() {
        increaseSeconds(buffer, bufferString, bufferMinEl, bufferSecEl)
    }  
    function decreaseBufferSeconds() {
        decreaseSeconds(buffer, bufferString, bufferMinEl, bufferSecEl)
    }



    function increaseMinutes(timeObj,stringObj, el) {
        if (timeObj.minutes < 99) ++timeObj.minutes;
        updateMinutes(timeObj, stringObj, el);
    }

    function decreaseMinutes(timeObj,stringObj, el) {
        if (timeObj.minutes > 0) --timeObj.minutes;
        updateMinutes(timeObj, stringObj, el);
    }

    function increaseSeconds(timeObj,stringObj, elMin, elSec) {
        if ((timeObj.seconds + step) === 60) {
            if (timeObj.minutes < 99 ) {
                ++timeObj.minutes;
                timeObj.seconds = 0;
            }
        } else {
            timeObj.seconds += step;
        }
        updateMinutes(timeObj, stringObj, elMin);
        updateSeconds(timeObj, stringObj, elSec);
    }

    function decreaseSeconds(timeObj, stringObj, elMin, elSec) {
        if ((timeObj.seconds - step) < 0) {
            if (timeObj.minutes > 0 ) {
                --timeObj.minutes;
                timeObj.seconds = 60 - step;
            }
        } else {
            timeObj.seconds -= step;
        }
        updateMinutes(timeObj, stringObj, elMin);
        updateSeconds(timeObj, stringObj, elSec);
    }

    function updateMinutes(timeObj, stringObj, el) {
        if (timeObj.minutes.toString().length === 1) {
            stringObj.minutes = '0' + timeObj.minutes;
        } else {
            stringObj.minutes = timeObj.minutes.toString();
        }
        el.innerText = stringObj.minutes;
    }

    function updateSeconds(timeObj, stringObj, el) {
        if (timeObj.seconds.toString().length === 1) {
            stringObj.seconds = '0' + timeObj.seconds;
        } else {
            stringObj.seconds = timeObj.seconds.toString();
        }
        el.innerText = stringObj.seconds;
    }

    function zeroPad(num) {
        var zero = 2 - num.toString().length + 1;
        return Array(+(zero > 0 && zero)).join("0") + num;
    }
</script>